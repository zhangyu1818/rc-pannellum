export interface PannellumConfig {
  type?: string;
  title?: string;
  author?: string;
  authorURL?: string;
  strings?: {
    loadButtonLabel?: string;
    loadingLabel?: string;
    bylineLabel?: string;
    noPanoramaError?: string;
    fileAccessError?: string;
    malformedURLError?: string;
    iOS8WebGLError?: string;
    genericWebGLError?: string;
    textureSizeError?: string;
  };
  basePath?: string;
  autoLoad?: boolean;
  autoRotate?: number;
  autoRotateInactivityDelay?: number;
  autoRotateStopDelay?: number;
  fallback?: string;
  orientationOnByDefault?: boolean;
  showZoomCtrl?: boolean;
  keyboardZoom?: boolean;
  mouseZoom?: boolean | string;
  draggable?: boolean;
  friction?: number;
  disableKeyboardCtrl?: boolean;
  showFullscreenCtrl?: boolean;
  showControls?: boolean;
  touchPanSpeedCoeffFactor?: number;
  yaw?: number;
  pitch?: number;
  hfov?: number;
  minYaw?: number;
  maxYaw?: number;
  minPitch?: number;
  maxPitch?: number;
  minHfov?: number;
  maxHfov?: number;
  multiResMinHfov?: boolean;
  compass?: boolean;
  northOffset?: number;
  preview?: string;
  previewTitle?: string;
  previewAuthor?: string;
  horizonPitch?: number;
  horizonRoll?: number;
  animationTimingFunction?: (t: number) => number;
  escapeHTML?: boolean;
  crossOrigin?: string;
  hotSpots?: PannellumHotSpots[];
  hotSpotDebug?: boolean;
  sceneFadeDuration?: number;
  capturedKeyNumbers?: any[];
  backgroundColor?: [number, number, number];
  avoidShowingBackground?: boolean;
  default?: PannellumDefault;
  scenes?: PannellumScenes;
  [key: string]: any;
}

export type PannellumDefault = { firstScene: any } & PannellumConfig;
export type PannellumScenes = {
  [key: string]: PannellumConfig;
};

export interface PannellumHotSpots {
  pitch?: number;
  yaw?: number;
  type?: string;
  text?: string;
  URL?: string;
  attributes?: any;
  sceneId?: string;
  targetPitch?: number;
  targetYaw?: number;
  targetHfov?: number;
  id?: any;
  cssClass?: string;
  scale?: boolean;
  [key: string]: any;
}

export interface PannellumViewer {
  addHotSpot: Function;
  addScene: Function;
  destroy: Function;
  getConfig: Function;
  getContainer: Function;
  getHfov: Function;
  getHfovBounds: Function;
  getHorizonPitch: Function;
  getHorizonRoll: Function;
  getNorthOffset: Function;
  getPitch: Function;
  getPitchBounds: Function;
  getRenderer: Function;
  getScene: Function;
  getYaw: Function;
  getYawBounds: Function;
  isLoaded: Function;
  isOrientationActive: Function;
  isOrientationSupported: Function;
  loadScene: Function;
  lookAt: Function;
  mouseEventToCoords: Function;
  off: Function;
  on: Function;
  removeHotSpot: Function;
  removeScene: Function;
  resize: Function;
  setHfov: Function;
  setHfovBounds: Function;
  setHorizonPitch: Function;
  setHorizonRoll: Function;
  setNorthOffset: Function;
  setPitch: Function;
  setPitchBounds: Function;
  setUpdate: Function;
  setYaw: Function;
  setYawBounds: Function;
  startAutoRotate: Function;
  startOrientation: Function;
  stopAutoRotate: Function;
  stopMovement: Function;
  stopOrientation: Function;
  toggleFullscreen: Function;
}
